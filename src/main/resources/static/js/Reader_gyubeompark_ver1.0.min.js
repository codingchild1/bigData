/***
 [ all_to_HIM (my nick) ]
 @fileName          : Reader_gyubeompark_ver1.0.js
 @title             : reader module
 @desc              : constructor:
  -
  *** setter:
  - speed : parameter : number
  - pitch : parameter : number
  - lang : property of this module : - Reader.LANGUAGE.KR
  - Reader.LANGUAGE.EN
  *** methods:
  - read : parameter : string
 @author            : gyubeom_park (god3se@gmail.com)
 @since             : 2023-12-01
 @version           : 1.0
 @license           : *Commercial Software License
  본 소프트웨어를 사용할 경우 본 소프트웨어를 취득한 사용권 계약 내용이 적용됩니다.
  예를 들면,
  배포자로부터 소프트웨어에 대한 사용권을 적법하게 취득하지 않은 경우
  본 소프트웨어를 사용할 수 없습니다.
 */
var _READER_INSTANCE_;

class Reader {
  constructor(e = {}) {
    (this._isIE =
      -1 != window.navigator.userAgent.toLowerCase().indexOf("msie")),
      (this.opts = e || {}),
      (this._SpeechSynthesisUtterance = void 0),
      (this._speechSynthesis = void 0),
      (this._voices = void 0),
      (this._voice = void 0),
      (this.LANGUAGE = {
        KR: "ko",
        EN: "en",
      }),
      (this._url = { browser: { chrome: "https://www.google.com/chrome/" } }),
      (this._sysMsg = {
        browser: {
          notSupported:
            "해당 Reader 모듈은 IE 지원이 되지 않습니다.\n크롬 설치 후, 크롬 브라우저에서 실행바랍니다...",
        },
        error: {
          voice:
            "voice 객체 생성 중 오류가 발생하였습니다. 관리자에게 문의바랍니다...",
          object: {
            speechSynthesis:
              "speechSynthesis object definition error arised...",
          },
          parameter: {
            lang: "lang parameter must be property of the module...",
            speed: "speed parameter must be number...",
            pitch: "pitch parameter must be number...",
          },
          method: {
            speak: { parameter: "parameter of speak method must be string..." },
          },
        },
      });
    let t = this.#a.getJsonKeyByVal(this.opts.lang),
      s = this.opts.speed,
      i = this.opts.pitch;
    (this._lang = this.#a.checkJsonkey(this.LANGUAGE, t)
      ? t
      : this.LANGUAGE.KR),
      (this._speed = this.#a.isNumber(s) ? s : 1),
      (this._pitch = this.#a.isNumber(i) ? i : 1);
    let r = () => {
      void 0 !== window.speechSynthesis &&
        ((this._speechSynthesis = window.speechSynthesis),
        (this._SpeechSynthesisUtterance = window.SpeechSynthesisUtterance),
        (this._voices = this._speechSynthesis.getVoices()));
    };
    r(),
      void 0 !== window.speechSynthesis &&
        void 0 !== window.speechSynthesis.onvoiceschanged &&
        (window.speechSynthesis.onvoiceschanged = r),
      this.init();
  }

  get speechSynthesis() {
    return this._speechSynthesis;
  }

  get SpeechSynthesisUtterance() {
    return this._SpeechSynthesisUtterance;
  }

  get speed() {
    return this._speed;
  }

  set speed(e) {
    if (!this.#a.isNumber(e))
      return window.console.error(this.error.parameter.speed), !1;
    this._speed = e;
  }

  get pitch() {
    return this._pitch;
  }

  set pitch(e) {
    if (!this.#a.isNumber(e))
      return window.console.error(this.error.parameter.pitch), !1;
    this._pitch = e;
  }

  get lang() {
    return this._lang;
  }

  set lang(e) {
    if (!this.#a.getJsonKeyByVal(this.LANGUAGE, e))
      return window.console.error(this.error.parameter.lang), !1;
    this._lang = e;
  }

  get voices() {
    return this._voices;
  }

  get voice() {
    return this._voice;
  }

  set voice(e) {
    if (void 0 === window.speechSynthesis)
      return (
        window.console.error(this._sysMsg.error.object.speechSynthesis), !1
      );
    let t,
      s,
      i = this.#a.getJsonKeyByVal(this.LANGUAGE, e);
    (t = i ? e : this.lang),
      void 0 != this.voices &&
        null != this.voices &&
        (s = this.voices.filter((e) => e.lang.includes(t))[0]),
      (this._voice = s);
  }

  init() {
    this.#b();
  }

  #b() {
    if (this._isIE)
      return (
        window.console.error(this._sysMsg.browser.notSupported),
        (window.location.href = this.url.browser.chrome),
        !1
      );
  }

  read(e) {
    if (!this.#a.isString(e, !1))
      return window.console.error(this._sysMsg.error.method.speak.parameter);
    this.voice = this.lang;
    let t = new this.SpeechSynthesisUtterance(e);
    (t.rate = this.speed),
      (t.pitch = this.pitch),
      (t.voice = this.voice),
      this.speechSynthesis.speak(t);
  }

  #a = {
    isString: (e, t) => "string" == typeof e && (!0 != t || 0 != e.length),
    isNumber: (e) => "number" == typeof e && isFinite(e),
    getJsonKeyByVal(e, t) {
      let s;
      for (let i in e)
        if (t == e[i]) {
          s = i;
          break;
        }
      return s;
    },
    checkJsonkey(e, t) {
      let s;
      for (let i in e)
        if (i == t) {
          s = i;
          break;
        }
      return s;
    },
  };
}

export default Reader;
